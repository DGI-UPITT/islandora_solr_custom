<?php

// $Id$


/**
 * @file
 * Configuration module for islandora_solr_search.module
 */

/**
 * Implementations of hook_init()
 * Including css for the admin page.
 */
 
function islandora_solr_custom_init() {
  // adds css. I should look for an alternative place to load this because hook_init() will load this on every page.
  drupal_add_css(drupal_get_path('module', 'islandora_solr_custom') .'/css/islandora_solr_custom.css');

  // add the .inc file
  module_load_include('inc', 'islandora_solr_custom', 'islandora_solr_custom.admin');
}



/**
 * Implements hook_islandora_solr_primary_display()
 */
function islandora_solr_custom_islandora_solr_primary_display() {
  return array(
    // 'machine-name' = array(
    //   'name' => 'Human Readable Name',
    //   'module' => 'module_name',
    //   'file' => 'FileName.inc',
    //   'class' => 'ClassName',
    //   'function' => 'function_name',
    //   'description' => 'A description of the display profile',
    // );
    'custom' => array(
      'name' => t('Custom'),
      'module' => 'islandora_solr_custom',
      'file' => 'IslandoraSolrResultsCustom.inc',
      'class' => "IslandoraSolrResultsCustom",
      'function' => "displayResults",
      'description' => t("Take full controll over the markup of the Solr results."),
    ),
  );
}



/**
 * Implementation of hook_help()
 */

function islandora_solr_custom_help($path, $arg) {

  switch ($path) {
    case 'admin/help#islandora_solr_config':
      return t("When 'Custom Solr Configuration Settings' is selected from the configuration drop-down in the<br />
        !page the following settings will be used.
        <ul>
        <li>Module - islandora_solr_custom</l1>
        <li>File - IslandoraSolrResultsCustom.inc</l1>
        <li>Class - IslandoraSolrResultsCustom</l1>
        <li>Method - displayResults</l1>
        </ul>
        ", array('!page' => l("Islandora_solr_search configuration page", 'admin/settings/islandora_solr_search'),)


      );
  }
}


/**
 * Implementation of hook_menu()
 */
 
function islandora_solr_custom_menu() {
  $items['admin/settings/islandora_solr_search/config'] = array(
    'title' => 'Islandora Solr Client',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'file path' => drupal_get_path('module', 'islandora_solr_search'),
    'weight' => -1,
  );
  $items['admin/settings/islandora_solr_search/custom'] = array(
    'title' => 'Islandora Solr customization',
    'description' => 'Customizing Islandora Solr output results',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_solr_custom_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'file' => 'islandora_solr_custom.admin.inc',
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}




/**
 * Implementation of hook_theme()
 */
 
 function islandora_solr_custom_theme() {
   return array(
     'islandora_solr_custom' => array(
       'template' => 'islandora_solr_custom',
       'arguments' => array('results_raw' => NULL),
     ),
     'islandora_solr_custom_admin_settings' => array(
       'arguments' => array('form' => NULL),
     ),
   );
 
 }
 
 
 
/**
 * Theme function for theming the admin table
 * @return rendered table
 */
 
function theme_islandora_solr_custom_admin_settings($form) {

	$rows = array();
	foreach ($form['islandora_solr_custom_table'] as $key) {
  	$row = array();
  	// check if $key is really the array we need. we shouldn't select the #parent array for example.
		if (isset($key['field']['#type'])) {
 
			$row[] = array('data' => drupal_render($key['field']));	
			$row[] = array('data' => drupal_render($key['label']));
			$row[] = array('data' => drupal_render($key['exclude_label']));
			$row[] = array('data' => drupal_render($key['markup']));
 
			$rows[] = $row;
		}
	}
  //unset($form['islandora_solr_custom_table']);
  $form['islandora_solr_custom_table']['#access'] = FALSE; // don't unset $form['anything'] , use $form['anything']['#access'] = FALSE; instead!
 
	// Individual table headers.
	$header = array();
	$header[] = t('solr field');
	$header[] = t('label');
	$header[] = t('exclude label?');
	$header[] = t('show markup when empty?');
  //dsm($form);
  $output = '';
  //$output = drupal_render($form['style']);  // render the dropdown before the table. Not sure if I want to keep this.
	$output .= theme('table', $header, $rows);
	$output .= drupal_render($form);
  
  //dsm($output);
  return $output;
}
 
 
 
 
 /**
  * Theme function for theming the solr search results
  *
  * @param $results
  * The raw search results
  *
  * @return variables to be used in the template file.
  */
  
function islandora_solr_custom_preprocess_islandora_solr_custom(&$variables) {
  // base url
  global $base_url;
  $variables['base_url'] = $base_url;
  // include solr field order generated from solrconfig.xml
  $variables['field_order'] = _islandora_solr_custom_solrconfig(); // not sure if this is really needed, but I'll keep it in for now.
  $variables['db_values'] = _islandora_solr_custom_db_values(); // this variable might be more useful as the db values are parsed in the solrconfig order using the results of _islandora_solr_custom_solrconfig().
  $db_values = $variables['db_values'];
  $variables['style'] = variable_get('islandora_solr_custom_style','div');
  $variables['css'] = variable_get('islandora_solr_custom_css', 1);
  
  // include css or not
  $css = variable_get('islandora_solr_custom_css', 1);
  if ($css == 1) {
    drupal_add_css(drupal_get_path('module', 'islandora_solr_custom') .'/css/islandora_solr_custom_tpl.css');
  }
  
  
  // go over each search result object
  foreach ($variables['results_raw']->response->docs as $doc) {
  
    $resultsArray = array();
    $zebra = 'odd';
    // go over each field within a search result object
    foreach($db_values as $db_value) {
      
      //dsm($db_value['field']);
      $value = $doc->$db_value['field'];
      $field = $db_value['field'];
      
          if (is_array($value)) {
            $value = implode(", ", $value);
          }
          // set the fields
          $resultsArray[$field]['value'] = $value;  
          $resultsArray[$field]['label'] = $db_value['label'];
          $resultsArray[$field]['class'] = strtolower( preg_replace('/[^A-Za-z0-9]/', '-', $db_value['field']) ); // turn the field name in a string that is appropriate to use as a class name.
          $resultsArray[$field]['exclude_label'] = $db_value['exclude_label'];
          $resultsArray[$field]['markup'] = $db_value['markup'];
          $resultsArray[$field]['zebra'] = $zebra;
          $zebra = ($zebra == 'odd' ? 'even' : 'odd'); 
     
    }

  // dsm($resultsArray);
  $variables['results'][] = $resultsArray;
  }
}






/**
 * Function to render the custom markup
 * @return uses the given solr fields to render sample code to copy into islandora_solr_custom.tpl.php
 */
 
function _islandora_solr_custom_markup_render($markup) {

  $output = '';
  
  $output .= '<div class="form-item">';
  $output .= '<p>'.t('In your theme create a template file called islandora_solr_custom.tpl.php and paste in the code below. This will give you a nice start to customize your solr search results. You can then add wrapper elements, change labels, generate images from the repository, etc. Don\'t forget to rebuild the theme registry after doing this.').'</p>';
  $output .= '<pre>';
  $output .= _islandora_solr_custom_markup_div($markup);
  $output .= '</pre>';
  $output .= '</div>'; 
  // dsm($markup);
  return $output;
}

/**
 * Function to render the div markup
 * @return div markup
 */
 
function _islandora_solr_custom_markup_div($markup) {

  // split $markup into arrays
  // $markup = nl2br($markup);
  //$markup = explode("\r\n", $markup);
  // $markup = str_replace("\r\n", '', $markup);
   //dsm($markup);
  
  // set $output variable
  $output = '';
  
  // add standard header markup
  $output .= _islandora_solr_custom_markup_description('start');
  
  foreach ($markup as $field) {
  
  $output .= check_plain('  <div class="solr-field <?php print $result[\''.$field.'\'][\'class\']; ?>">  
      <label><?php print t($result[\''.$field.'\'][\'label\']); ?></label>
      <div class="value"><?php print $result[\''.$field.'\'][\'value\']; ?></div>
    </div>
  ');
  }
  
  $output .= _islandora_solr_custom_markup_description('end');
  return $output;
}

/**
 * Function that holds the standard markup description.
 * @return Standard markup description.
 */
 
function _islandora_solr_custom_markup_description($pos) {

  switch ($pos) {
    case 'start':
      return check_plain('<?php
// $Id $
/**
 * @file islandora_solr_custom.tpl.php
 * Islandora solr search results template
 *
 * Variables available:
 * - $base_url: The base url of the current website. eg: http://example.com .
 * - $user: The user object.
 *
 */
?>
<ul class="islandora_solr_results">
<?php foreach ($results as $id => $result): ?>
  <li class="islandora_solr_result">
  ');
      break;
    
    case 'end':
      return check_plain('</li>
<?php endforeach; ?>
</ul>
');
      break;
  }
}





